[{"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\index.tsx":"1","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\reportWebVitals.ts":"2","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\App\\App.tsx":"3","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Header\\Header.tsx":"4","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Menu\\Menu.tsx":"5","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Routing\\Routing.tsx":"6","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Logout\\Logout.tsx":"7","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Register\\Register.tsx":"8","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Login\\Login.tsx":"9","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\SharedArea\\Page404\\Page404.tsx":"10","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\EditVacation\\EditVacation.tsx":"11","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\VacationsList\\VacationsList.tsx":"12","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\AddVacation\\AddVacation.tsx":"13","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\AuthState.ts":"14","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\JwtAxios.ts":"15","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\Store.tsx":"16","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\VacationsState.tsx":"17","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\Globals\\Globals.tsx":"18","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\SharedArea\\PleaseWait\\PleaseWait.tsx":"19","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Models\\VacationModel.tsx":"20","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\UsersState.tsx":"21","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\VacationCardUsers\\VacationCardUsers.tsx":"22","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\AuthMenu\\AuthMenu.tsx":"23","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\AdminArea\\AdminPage\\AdminPage.tsx":"24","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\Notify.ts":"25","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\LiveService.ts":"26"},{"size":531,"mtime":1628064256372,"results":"27","hashOfConfig":"28"},{"size":425,"mtime":1626370726462,"results":"29","hashOfConfig":"28"},{"size":753,"mtime":1631614614174,"results":"30","hashOfConfig":"28"},{"size":267,"mtime":1633068249313,"results":"31","hashOfConfig":"28"},{"size":1018,"mtime":1630302504466,"results":"32","hashOfConfig":"28"},{"size":1445,"mtime":1631615058969,"results":"33","hashOfConfig":"28"},{"size":512,"mtime":1631108940856,"results":"34","hashOfConfig":"28"},{"size":3334,"mtime":1633068291288,"results":"35","hashOfConfig":"28"},{"size":3020,"mtime":1631614440760,"results":"36","hashOfConfig":"28"},{"size":181,"mtime":1628345306061,"results":"37","hashOfConfig":"28"},{"size":8758,"mtime":1633068138339,"results":"38","hashOfConfig":"28"},{"size":5345,"mtime":1633067832732,"results":"39","hashOfConfig":"28"},{"size":6461,"mtime":1633068121973,"results":"40","hashOfConfig":"28"},{"size":1613,"mtime":1629973750273,"results":"41","hashOfConfig":"28"},{"size":564,"mtime":1628595422421,"results":"42","hashOfConfig":"28"},{"size":889,"mtime":1631615673527,"results":"43","hashOfConfig":"28"},{"size":2411,"mtime":1629299345042,"results":"44","hashOfConfig":"28"},{"size":1603,"mtime":1631619482754,"results":"45","hashOfConfig":"28"},{"size":171,"mtime":1628345342849,"results":"46","hashOfConfig":"28"},{"size":937,"mtime":1633068192740,"results":"47","hashOfConfig":"28"},{"size":2198,"mtime":1628364932002,"results":"48","hashOfConfig":"28"},{"size":6875,"mtime":1633067898560,"results":"49","hashOfConfig":"28"},{"size":1791,"mtime":1631087625724,"results":"50","hashOfConfig":"28"},{"size":3490,"mtime":1631614230307,"results":"51","hashOfConfig":"28"},{"size":1602,"mtime":1630411180074,"results":"52","hashOfConfig":"28"},{"size":672,"mtime":1633068177668,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"ysoury",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\index.tsx",[],["120","121"],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\reportWebVitals.ts",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\App\\App.tsx",["122"],"import { Component } from \"react\";\nimport { BrowserRouter} from \"react-router-dom\";\nimport Header from '../Header/Header';\nimport Menu from '../Menu/Menu';\nimport Routing from '../Routing/Routing';\n\n\nimport \"./App.css\";\n\nclass Layout extends Component {\n    \n\n    public render(): JSX.Element {\n        return (\n            <BrowserRouter>\n                <div className=\"Layout\">\n                    <header>\n                        <Header/>\n                    </header>\n                    {/* <nav>\n                        <Menu />\n                    </nav> */}\n                    <main>\n                        <Routing />\n                    </main>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default Layout;","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Header\\Header.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Menu\\Menu.tsx",["123","124"],"import { NavLink } from \"react-router-dom\";\nimport \"./Menu.css\";\nimport store from \"../../Redux/Store\";\nimport globals from \"../../Services/Globals/Globals\";\n\n\n\nfunction Menu(): JSX.Element {\n\n\n    return (\n        <div className=\"Menu\">\n\t\t\t<nav>\n                <NavLink to=\"/home\" exact>Home</NavLink>\n\n                {/* {!globals.isUserLoggedIn()?<NavLink to=\"/login\" exact>Login</NavLink>:<NavLink to=\"/logout\" exact>Logout</NavLink>} */}\n                {/* <NavLink to=\"/login\" exact>Login</NavLink> */}\n                <NavLink to=\"/vacations\" exact>Vacations</NavLink>\n\n                {/* {globals.isUserLoggedIn() && ?<NavLink to=\"/vacations\" exact>Vacation</NavLink>:null} */}\n                {/* <NavLink id=\"boom\" to=\"/logout\" exact>Logout</NavLink> */}\n\n                {/* {globals.isAdmin()?<span><NavLink className=\"NewVacation\" to=\"/vacations/new\" exact>\n                    Add Vacation\n                </NavLink></span>: null} */}\n            </nav>\n        </div>\n    );\n}\n\nexport default Menu;\n",["125","126"],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\LayoutArea\\Routing\\Routing.tsx",["127"],"import {Redirect, Route, Switch, useHistory } from \"react-router\";\nimport Page404 from \"../../SharedArea/Page404/Page404\";\nimport Login from \"../../HomeArea/Login/Login\";\nimport Register from \"../../HomeArea/Register/Register\";\nimport VacationsList from \"../../VacationsArea/VacationsList/VacationsList\";\nimport Logout from \"../../HomeArea/Logout/Logout\";\nimport AddVacation from \"../../VacationsArea/AddVacation/AddVacation\";\nimport EditVacation from \"../../VacationsArea/EditVacation/EditVacation\";\nimport AdminPage from \"../../AdminArea/AdminPage/AdminPage\";\nimport globals from \"../../Services/Globals/Globals\";\n\n\nfunction Routing(): JSX.Element {\n\n\n    return (\n        \n\t\t\t<Switch>\n                <Route path=\"/login\" component={Login} exact />\n                <Route path=\"/register\" component={Register} exact />\n                <Route path=\"/logout\" component={Logout} exact />\n                <Route path=\"/vacations\" component={VacationsList} exact />\n                <Route path=\"/vacations/new\" component={AddVacation} exact />\n                <Route path=\"/vacations/edit/:id\" component={EditVacation} exact />\n                <Route path=\"/admin\" component={AdminPage} exact />\n                {globals.isUserLoggedIn()?<Redirect from=\"/\" to=\"/vacations\" exact />:<Redirect from=\"/\" to=\"/login\" exact />}\n                <Route component={Page404} /> Must be last!\n            </Switch>\n        \n    );\n}\n\nexport default Routing;","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Logout\\Logout.tsx",["128"],"// Logout\n\nimport { useEffect } from \"react\";\nimport store from \"../../Redux/Store\";\nimport { userLoggedOutAction } from \"../../Redux/AuthState\";\nimport { useHistory } from \"react-router\";\nimport notify from \"../../Services/Notify\";\n\n\n\nfunction Logout(): JSX.Element {\n\n    let history = useHistory();\n\n\n    useEffect(() => {\n        store.dispatch(userLoggedOutAction());\n        notify.success(\"Logged-out successfully.\");\n        history.push(\"/login\");\n    }, []);\n    return null;\n}\n\nexport default Logout;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Register\\Register.tsx",["129","130"],"import \"./Register.css\";\nimport Button from '@material-ui/core/Button'\nimport { NavLink, Link } from \"react-router-dom\";\nimport UserModel from \"../../Models/UserModel\";\n\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport store from \"../../Redux/Store\";\nimport { userRegisteredAction } from \"../../Redux/AuthState\"\nimport { useHistory } from \"react-router\";\nimport notify from \"../../Services/Notify\";\n\n\n\nfunction Register(): JSX.Element {\n\n\n\n    const { register, handleSubmit, formState } = useForm<UserModel>();\n    let history = useHistory();\n\n\n    async function registerUser(user: UserModel) {\n        try {\n            const response = await axios.post<UserModel>(\"http://localhost:3001/api/auth/register/\", user);\n            const new_user = response.data;\n\n            store.dispatch(userRegisteredAction(new_user));\n            notify.success(\"Logged-in successfully.\");\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            history.push(\"/vacations\"); // Go to that route!\n\n        } catch (err) {\n            notify.error(err);\n        }\n    }\n\n\n\n\n    return (\n        <div className=\"Box\">\n            <h2>Register here</h2>\n            <form onSubmit={handleSubmit(registerUser)}>\n                <table>\n                    <tr>\n                        <td>First Name:</td>\n                        <td><input type=\"text\" placeholder=\"First name...\" {...register(\"firstName\", { required: true, minLength: 2 })} /></td>\n                        {formState.errors.firstName?.type === \"required\" && <span>Missing First Name.</span>}\n                        {formState.errors.firstName?.type === \"minLength\" && <span>First Name too short.</span>}\n                    </tr>\n                    <tr>\n                        <td>Last Name:</td>\n                        <td><input type=\"text\" placeholder=\"Last name...\" {...register(\"lastName\", { required: true, minLength: 3 })} /></td>\n                        {formState.errors.lastName?.type === \"required\" && <span>Missing Last Name.</span>}\n                        {formState.errors.lastName?.type === \"minLength\" && <span>Last Name too short.</span>}\n                    </tr>\n                    <tr>\n                        <td>User Name:</td>\n                        <td><input type=\"text\" autoFocus placeholder=\"Username...\" {...register(\"userName\", { required: true, minLength: 3 })} /></td>\n                        {formState.errors.userName?.type === \"required\" && <span>Missing User Name</span>}\n                        {formState.errors.userName?.type === \"minLength\" && <span>User Name too short.</span>}\n                    </tr>\n                    <tr>\n                        <td>Password:</td>\n                        <td><input type=\"password\" placeholder=\"Password...\" {...register(\"password\", { required: true, minLength: 3 })} /></td>\n                        {formState.errors.password?.type === \"required\" && <span>Missing Password</span>}\n                        {formState.errors.password?.type === \"minLength\" && <span>Password too short.</span>}\n                    </tr>\n                </table>\n\n\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                    Register\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default Register;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\Login\\Login.tsx",["131","132","133","134","135","136"],"import { Component, SyntheticEvent } from \"react\";\nimport \"./Login.css\";\nimport Button from '@material-ui/core/Button'\nimport { NavLink, Link, useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport UserModel from \"../../Models/UserModel\";\nimport { useForm } from \"react-hook-form\";\nimport store from \"../../Redux/Store\";\nimport { userLoggedInAction } from \"../../Redux/AuthState\"\nimport globals from \"../../Services/Globals/Globals\";\nimport Logout from \"../Logout/Logout\";\nimport Header from \"../../LayoutArea/Header/Header\";\nimport React from \"react\";\nimport notify from \"../../Services/Notify\";\n\n\n\nfunction Login(): JSX.Element {\n\n\n    const { register, handleSubmit, formState } = useForm<UserModel>();\n\n    let boom = useHistory();\n\n    async function login(user: UserModel) {\n        try {\n\n            const response = await axios.post<UserModel>(\"http://localhost:3001/api/auth/login\", user);\n            const new_user = response.data;\n            store.dispatch(userLoggedInAction(response.data));\n            localStorage.setItem(\"user\", JSON.stringify(new_user));// שומר את זה בסשן סטורג' בפרויקט זה גם סבבה\n            notify.success(\"Logged-in successfully.\");\n            boom.push(\"/vacations\"); // Go to that route!\n\n        } catch (err) {\n            console.log(err.message);\n            notify.error(err);\n        }\n\n    }\n\n\n\n\n\n    // public render(): JSX.Element {\n    return (\n\n\n        <div className=\"Login Box\">\n\n            <h2> First Please Login!</h2>\n            <form onSubmit={handleSubmit(login)}>\n                <table>\n\n\n                    <thead>\n                        <tr>\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <td>User Name:</td>\n                            <td><input type=\"text\" autoFocus placeholder=\"Username...\" {...register(\"userName\", { required: true, minLength: 3 })} /></td>\n                            {formState.errors.userName?.type === \"required\" && <span>Missing User Name</span>}\n                            {formState.errors.userName?.type === \"minLength\" && <span>User Name too short.</span>}\n                        </tr>\n                        <tr>\n                            <td>Password:</td>\n                            <td><input type=\"password\" placeholder=\"Password...\" {...register(\"password\", { required: true, minLength: 3 })} /></td>\n                            {formState.errors.password?.type === \"required\" && <span>Missing Password</span>}\n                            {formState.errors.password?.type === \"minLength\" && <span>Password too short.</span>}\n\n                        </tr>\n                    </tbody>\n                </table>\n\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                    Login\n                </Button>\n                <br />\n            </form>\n\n            <Button variant=\"contained\" color=\"secondary\" component={Link} to={\"/register\"}>\n                Register\n            </Button>\n\n\n        </div>\n    );\n}\n\n\nexport default Login;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\SharedArea\\Page404\\Page404.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\EditVacation\\EditVacation.tsx",["137","138","139"],"import axios from \"axios\";\nimport { useForm } from \"react-hook-form\"\nimport { NavLink, RouteComponentProps, useHistory } from \"react-router-dom\";\nimport VacationModel from \"../../Models/VacationModel\";\nimport \"./EditVacation.css\";\nimport store from \"../../Redux/Store\"\nimport { vacationUpdatedAction } from \"../../Redux/VacationsState\"\nimport Button from '@material-ui/core/Button'\nimport jwtAxios from \"../../Services/JwtAxios\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport globals from \"../../Services/Globals/Globals\";\nimport notify from \"../../Services/Notify\";\nimport { send } from \"process\";\nimport LiveService from \"../../Services/LiveService\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\n\n\ninterface RouteParams {\n    id: string;\n}\n\n// Our props interface must extends the following:\ninterface VacationDetailsProps extends RouteComponentProps<RouteParams> { vacation: VacationModel }\n\n\n\nfunction EditVacation(props: VacationDetailsProps): JSX.Element {\n\n    const { register, handleSubmit, formState } = useForm<VacationModel>();\n\n    const liveService: LiveService = new LiveService(); //גישה מהקומפוננט צאט לצאט סרביס  \n    let history = useHistory();\n\n    const [vacationState, setVacationState] = useState<VacationModel>()\n\n\n    useEffect(() => {\n\n\n        (async () => {\n            try {\n\n                if (!store.getState().authState.user) {\n                    notify.error(\"You are not logged in.\");\n                    history.push(\"/login\");\n                    return;\n                }\n\n                if (store.getState().authState.user.userName !== \"admin\") {\n                    notify.error(\"You dont have access to this URL\");\n                    history.push(\"/vacations\")\n                }\n\n\n                const id = +props.match.params.id;\n                console.log(id)\n                console.log(store.getState().vacationsState.vacations)\n                const vacation = store.getState().vacationsState.vacations.find(p => p.id === id)\n                if (vacation) {\n                    setVacationState(vacation)\n                    // notify.success(\"store\")\n                }\n                else {\n                    const response = await jwtAxios.get(globals.vacationsUrl + props.match.params.id)\n                    setVacationState(response.data);\n                    // notify.success(\"api\")\n                }\n\n\n\n            } catch (err) {\n                alert(\"Error\");\n                history.push(\"/vacations\");\n                console.log(err);\n            }\n\n\n        })()\n\n\n    }, [])\n\n\n\n\n    async function put(vacation: VacationModel) {\n        try {\n            const response = await jwtAxios.put<VacationModel>(`http://localhost:3001/api/vacations/${props.match.params.id}/`, VacationModel.convertToFormData(vacation));\n            const new_vacation = response.data;\n            new_vacation.followers = vacationState.followers    //Handling the followers\n            store.dispatch(vacationUpdatedAction(new_vacation))\n            notify.success(\"Vacation updated successfully: \" + new_vacation.destination);\n            liveService.send(new_vacation);\n            history.push(\"/vacations\")\n        }\n        catch (err) {\n            notify.error(err);\n            console.log(err);\n        }\n    }\n\n\n    return (\n        <div className=\"EditVacation Box1\">\n\n            {vacationState &&\n                <form onSubmit={handleSubmit(put)} className=\"updateForm\">\n\n                    <h2>Update Vacation</h2>\n\n                    <Grid container direction={\"column\"} spacing={3}>\n                        <Grid item >\n                            <TextField\n                                defaultValue={vacationState.destination}\n                                label=\"Destination\"\n                                autoFocus\n                                size=\"medium\"\n                                required\n                                id=\"outlined-textarea\"\n                                multiline\n                                color=\"primary\"\n                                variant=\"outlined\"\n                                {...register(\"destination\", { required: true, minLength: 3 })}\n                            />\n                            {formState.errors.destination?.type === \"required\" && <span>Missing destination.</span>}\n                            {formState.errors.destination?.type === \"minLength\" && <span>Destination too short.</span>}</Grid>\n\n                        <Grid item >\n                            <TextField\n                                defaultValue={vacationState.description}\n                                label=\"Description\"\n                                autoFocus\n                                size=\"medium\"\n                                required\n                                id=\"filled-full-width\"\n                                multiline\n                                variant=\"outlined\"\n                                rows={4}\n                                {...register(\"description\", { required: true, minLength: 10 })}\n                            />\n                            {formState.errors.description?.type === \"required\" && <span>Missing description.</span>}\n                            {formState.errors.description?.type === \"minLength\" && <span>Description too short.</span>}\n                        </Grid>\n\n                        <Grid item >\n                            <TextField\n                                defaultValue={vacationState.price}\n                                id=\"outlined-number\"\n                                label=\"Price\"\n                                type=\"number\"\n                                size=\"small\"\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                variant=\"outlined\"\n                                {...register(\"price\", { required: true, min: 0 })}\n                            />\n                            {formState.errors.price?.type === \"required\" && <span>Missing price.</span>}\n                            {formState.errors.price?.type === \"min\" && <span>Price can't be negative.</span>}\n                        </Grid>\n\n\n                        <Grid item >\n                            <TextField\n                                id=\"date\"\n                                label=\"Arrival\"\n                                type=\"date\"\n                                defaultValue={vacationState.arrival}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                {...register(\"arrival\", { required: true })}\n                            />\n                            {formState.errors.arrival?.type === \"required\" && <span>Missing arrival.</span>}\n                        </Grid>\n\n                        <Grid item >\n                            <TextField\n                                id=\"date\"\n                                label=\"Departure\"\n                                type=\"date\"\n                                defaultValue={vacationState.departure}\n                                InputLabelProps={{\n                                    shrink: true,\n                                }}\n                                {...register(\"departure\", { required: true })}\n                            />\n                            {formState.errors.departure?.type === \"required\" && <span>Missing departure.</span>}\n\n                        </Grid>\n\n\n                        <Grid item >\n                            <input type=\"file\" name=\"image\" accept=\"image/*\" {...register(\"image\", { required: true })} />\n                            {formState.errors.image?.type === \"required\" && <span>Missing image.</span>}\n                        </Grid>\n\n\n                        <CardMedia\n                            component=\"img\"\n                            alt=\"Contemplative Reptile\"\n                            height=\"140\"\n                            image={globals.vacationsUrl + \"images/\" + vacationState.imageName}\n                        />\n                    </Grid>\n\n                    <br />\n\n                    <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                        Update\n                    </Button>\n\n                    <NavLink className=\"update\" to={\"/vacations\"}>\n                        Go Back\n                    </NavLink>\n                </form>}\n\n\n        </div>\n\n\n    );\n}\n\nexport default EditVacation;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\VacationsList\\VacationsList.tsx",["140","141","142","143","144","145"],"import { Add } from \"@material-ui/icons\";\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button'\nimport jwtAxios from \"../../Services/JwtAxios\";\nimport { Component } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport VacationModel from \"../../Models/VacationModel\";\nimport { vacationAddedAction, vacationDeletedAction, vacationsDownloadedAction, vacationUpdatedAction } from \"../../Redux/VacationsState\"\nimport store from \"../../Redux/Store\";\nimport globals from \"../../Services/Globals/Globals\";\nimport PleaseWait from \"../../SharedArea/PleaseWait/PleaseWait\";\nimport VacationCardUsers from \"../VacationCardUsers/VacationCardUsers\"\nimport \"./VacationsList.css\";\nimport { History } from \"history\";\nimport LiveService from \"../../Services/LiveService\";\nimport notify from \"../../Services/Notify\";\n\n\ninterface VacationListState {\n    vacations: VacationModel[];\n}\n\ninterface VacationListProps {\n    history: History;\n}\n\nclass VacationsList extends Component<VacationListProps, VacationListState> {\n\n    private liveService: LiveService = new LiveService(); //גישה מהקומפוננט צאט לצאט סרביס\n\n    public follow: number[] = [];\n    public constructor(props: VacationListProps) {\n        super(props);\n        this.state = { vacations: store.getState().vacationsState.vacations };\n\n    }\n\n\n\n    public async componentDidMount() {\n\n        try {\n\n\n\n            if (!store.getState().authState.user) {\n                notify.error(\"You are not logged in.\");\n                this.props.history.push(\"/login\");\n                return;\n            }\n\n\n\n\n            this.liveService.connect();\n            this.liveService.socket.on(\"msg-from-server\", msg => {\n\n\n                const newVacationsArray = [...this.state.vacations];\n                console.log(newVacationsArray);\n\n                //In case the vacation is exist and we changed any value - live\n\n                for (let i = 0; i < newVacationsArray.length; i++) {\n                    if (newVacationsArray[i].id === msg.id) {\n                        newVacationsArray[i] = msg;\n                        this.setState({ vacations: newVacationsArray });\n                        console.log(msg);\n                        break;\n                    }\n                }\n\n\n                // In case it's a new vacation and we want it to be added live\n                const admin = JSON.parse(localStorage.getItem(\"user\"));\n                if (admin.userName !== \"admin\") {\n\n                    if (!newVacationsArray.find(p => p.id === msg.id)) {\n                        newVacationsArray.push(msg);\n                        this.setState({ vacations: newVacationsArray });\n                        console.log(this.state.vacations);\n\n\n                        store.dispatch(vacationAddedAction(msg));\n                    }\n\n                }\n\n            });\n\n\n\n            // in case we want to delete vacation - live\n            this.liveService.socket.on(\"msg-from-client-delete\", id => {\n                const vacationsArray = [...this.state.vacations];\n                for (var i = 0; i < vacationsArray.length; i++) {\n\n                    if (vacationsArray[i].id === id) {\n                        vacationsArray.splice(i, 1);\n                        this.setState({ vacations: vacationsArray });\n                        break;\n                    }\n                }\n\n\n            });\n\n\n\n            console.log(this.state.vacations)\n            if (this.state.vacations.length === 0) {\n                const response = await jwtAxios.get<VacationModel[]>(globals.vacationsUrl); // response is a wrapper.\n                this.setState({ vacations: response.data });\n                store.dispatch(vacationsDownloadedAction(response.data));\n            }\n\n\n\n\n            const followers = await jwtAxios.get(globals.followersUrl);\n            const allFollowers = followers.data;\n\n\n            for (let f of allFollowers) {\n                if (f.user_id === store.getState().authState.user.id) {\n                    this.follow.push(f.vacation_id);\n                    console.log(this.follow);\n                }\n            }\n\n            for (let f of this.follow) {\n                const v = this.state.vacations.sort((v) => (v.id !== f) ? 1 : -1);\n                this.setState({ vacations: v });\n                console.log(this.state.vacations);\n            }\n\n\n\n        }\n        catch (err) {\n            notify.error(err);\n            this.props.history.push(\"/logout\");\n            console.log(err);\n        }\n\n\n\n    }\n\n\n\n\n\n\n    public render(): JSX.Element {\n\n\n        return (\n\n\n            <div className=\"VacationsList\">\n\n                <h2>Our Vacations</h2>\n\n\n                {globals.isUserLoggedIn() && globals.isAdmin() ? <span><Button variant=\"contained\" color=\"primary\" component={Link} to={\"/vacations/new\"}>\n                    Add New Vacation +\n                </Button></span> : null}\n\n                {globals.isUserLoggedIn() && globals.isAdmin() ? <span> <Button variant=\"contained\" color=\"secondary\" component={Link} to={\"/admin\"}>\n                    Admin Page\n                </Button></span> : null}\n\n                <br />\n                {this.state.vacations.map(p => <VacationCardUsers vacation={p} key={p.id} />)}\n\n            </div>\n        );\n    }\n}\n\n\n\nexport default VacationsList;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\AddVacation\\AddVacation.tsx",["146","147","148"],"import axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport VacationModel from \"../../Models/VacationModel\";\nimport { vacationAddedAction } from \"../../Redux/VacationsState\";\nimport store from \"../../Redux/Store\";\nimport Button from '@material-ui/core/Button'\nimport jwtAxios from \"../../Services/JwtAxios\";\nimport \"./AddVacation.css\";\nimport { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport notify from \"../../Services/Notify\";\nimport { NavLink } from \"react-router-dom\";\nimport LiveService from \"../../Services/LiveService\";\nimport globals from \"../../Services/Globals/Globals\";\n\n\n\nfunction AddVacation(): JSX.Element {\n\n\n    let history = useHistory();\n\n    const { register, handleSubmit, formState } = useForm<VacationModel>();\n\n    const liveService: LiveService = new LiveService(); //גישה מהקומפוננט צאט לצאט סרביס  \n\n    useEffect(() => {\n\n        if (!store.getState().authState.user) {\n            notify.error(\"You are not logged in.\");\n            history.push(\"/login\");\n            return;\n        }\n\n        if (store.getState().authState.user.userName !== \"admin\") {\n            notify.error(\"You dont have access to this URL\");\n            history.push(\"/vacations\")\n        }\n    }, [])\n\n\n\n    async function addNewVacation(vacation: VacationModel) {\n        try {\n            const response = await jwtAxios.post<VacationModel>(globals.vacationsUrl, VacationModel.convertToFormData(vacation));\n            const addedVacation = response.data; // The added vacation in the backend.\n            console.log(addedVacation);\n            addedVacation.followers = 0 //Handling the followers\n            store.dispatch(vacationAddedAction(addedVacation));\n            liveService.send(addedVacation)\n            notify.success(\"Vacation added successfully\");\n            history.push(\"/vacations\"); // Go to that route!\n        }\n        catch (err) {\n            notify.error(err);\n        }\n    }\n\n\n    return (\n        <div className=\"AddVacation Box1\">\n\n            <form encType=\"multipart/form-data\" onSubmit={handleSubmit(addNewVacation)} className=\"updateForm\">\n                <h2>Add new Vacation</h2>\n\n\n                <Grid container direction={\"column\"} spacing={3}>\n                    <Grid item>\n                        <TextField\n                            label=\"Destination\"\n                            autoFocus\n                            size=\"medium\"\n                            required\n                            id=\"outlined-textarea\"\n                            multiline\n                            color=\"primary\"\n                            variant=\"outlined\"\n                            {...register(\"destination\", { required: true, minLength: 3 })}\n                        />\n                        {formState.errors.destination?.type === \"required\" && <span>Missing destination.</span>}\n                        {formState.errors.destination?.type === \"minLength\" && <span>Destination too short.</span>}\n                    </Grid>\n\n                    <Grid item>\n                        <TextField\n                            label=\"Description\"\n                            autoFocus\n                            size=\"medium\"\n                            required\n                            id=\"filled-full-width\"\n                            multiline\n                            variant=\"outlined\"\n                            rows={4}\n                            {...register(\"description\", { required: true, minLength: 10 })}\n                        />\n                        {formState.errors.description?.type === \"required\" && <span>Missing description.</span>}\n                        {formState.errors.description?.type === \"minLength\" && <span>Description too short.</span>}\n                    </Grid>\n\n                    <Grid item>\n                        <TextField\n                            id=\"outlined-number\"\n                            label=\"Price\"\n                            type=\"number\"\n                            size=\"small\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            variant=\"outlined\"\n                            {...register(\"price\", { required: true, min: 0 })}\n                        />\n                        {formState.errors.price?.type === \"required\" && <span>Missing price.</span>}\n                        {formState.errors.price?.type === \"min\" && <span>Price can't be negative.</span>}\n                    </Grid>\n\n                    <Grid item>\n                        <TextField\n                            id=\"date\"\n                            label=\"Arrival\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            {...register(\"arrival\", { required: true })}\n                        />\n                        {formState.errors.arrival?.type === \"required\" && <span>Missing arrival.</span>}\n                    </Grid>\n\n                    <Grid item>\n                        <TextField\n                            id=\"date\"\n                            label=\"Departure\"\n                            type=\"date\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            {...register(\"departure\", { required: true })}\n                        />\n                        {formState.errors.departure?.type === \"required\" && <span>Missing departure.</span>}\n\n                    </Grid>\n\n                    <Grid item>\n                        <input type=\"file\" name=\"image\" accept=\"image/*\" {...register(\"image\", { required: true })} />\n                        {formState.errors.image?.type === \"required\" && <span>Missing image.</span>}\n\n                    </Grid>\n\n                </Grid>\n\n                <br />\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\n                    Add vacation\n                </Button>\n\n\n                <NavLink className=\"update\" to={\"/vacations\"}>\n                    Go Back\n                </NavLink>\n            </form>\n\n        </div>\n    );\n}\n\nexport default AddVacation;\n\n\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\AuthState.ts",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\JwtAxios.ts",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\Store.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\VacationsState.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\Globals\\Globals.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\SharedArea\\PleaseWait\\PleaseWait.tsx",[],["149","150"],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Models\\VacationModel.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Redux\\UsersState.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\VacationsArea\\VacationCardUsers\\VacationCardUsers.tsx",["151","152"],"import { NavLink, useHistory } from \"react-router-dom\";\nimport VacationModel from \"../../Models/VacationModel\";\nimport globals from \"../../Services/Globals/Globals\";\nimport \"./VacationCardUsers.css\";\nimport CreateIcon from '@material-ui/icons/Create';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport store from \"../../Redux/Store\"\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { vacationDeletedAction, vacationUpdatedAction } from \"../../Redux/VacationsState\"\nimport jwtAxios from \"../../Services/JwtAxios\";\nimport Card from \"@material-ui/core/Card\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport notify from \"../../Services/Notify\";\nimport LiveService from \"../../Services/LiveService\";\n\ninterface VacationCardProps {\n    vacation: VacationModel;\n}\n\n\nfunction VacationCardUsers(props: VacationCardProps): JSX.Element {\n\n    const liveService: LiveService = new LiveService(); //גישה מהקומפוננט צאט לצאט סרביס   \n\n    const [classTest, setButtonClass] = useState(\"unfollow\")\n    const [followVacation, setButtonText] = useState(\" + Follow\")\n\n    let history = useHistory();\n\n    const useStyles = makeStyles({\n        root: {\n            maxWidth: 450\n        }\n    });\n\n    const classes = useStyles();\n\n    useEffect(() => {\n\n        (async () => {\n            try {\n                const response = await jwtAxios.get(globals.followersUrl)\n                const allFollowers = response.data\n\n                if (store.getState().authState.user) {\n                    for (let i of allFollowers) {\n                        if (i.vacation_id === props.vacation.id && i.user_id === store.getState().authState.user.id) {\n                            setButtonClass(\"follow\");\n                            setButtonText(\"Unfollow\");\n                        }\n                    }\n                }\n\n\n            } catch (err) {\n                notify.error(err)\n                console.log(err);\n            }\n\n\n        })()\n\n    }, []);\n\n\n    async function deleteVacation() {\n        try {\n\n            const ok = window.confirm(\"Are you sure?\");\n            if (!ok) return;\n            await axios.delete(globals.vacationsUrl + props.vacation.id);\n            store.dispatch(vacationDeletedAction(props.vacation.id));\n            notify.success(\"Vacation has been deleted!\")\n\n            liveService.send2(props.vacation.id)\n            history.push(\"/vacations\");\n\n        }\n        catch (err) {\n            alert(\"Error: \" + err);\n        }\n    }\n\n\n\n\n    async function handleclick() {\n\n        const user_follow = store.getState().authState.user.id\n\n        const followeObject = {\n\n            \"user_id\": user_follow,\n            \"vacation_id\": props.vacation.id,\n            \"followers\": props.vacation.followers\n        }\n\n        const thisVacation = props.vacation;\n\n        if (classTest == \"unfollow\") {\n\n            setButtonClass(\"follow\");\n            setButtonText(\"Unfollow\")\n\n\n            try {\n                const response = await jwtAxios.post<any>(globals.vacationsUrl + `follow`, followeObject);\n                const new_vacation = response.data;\n                thisVacation.followers++\n                console.log(thisVacation);\n                store.dispatch(vacationUpdatedAction(thisVacation));\n                console.log(store.getState().vacationsState.vacations);\n                notify.success(`You are now following this Vacation: ` + thisVacation.destination)\n\n                liveService.send(store.getState().vacationsState.vacations.find(p => p.id === new_vacation.vacation_id))\n            }\n            catch (err) {\n                notify.error(err)\n                history.push(\"/vacations\")\n                console.log(err);\n            }\n\n\n\n\n        } else {\n            setButtonClass(\"unfollow\");\n            setButtonText(\"+ Follow\")\n\n            try {\n                const response = await jwtAxios.post<any>(globals.vacationsUrl + `unfollow`, followeObject);\n                const unfollowed_vacation = response.data;\n\n                thisVacation.followers--\n                console.log(thisVacation);\n\n                store.dispatch(vacationUpdatedAction(thisVacation));\n                notify.success(`You are not following this Vacation: ` + thisVacation.destination)\n\n                liveService.send(store.getState().vacationsState.vacations.find(p => p.id === unfollowed_vacation.vacation_id))\n            }\n            catch (err) {\n                notify.error(err)\n                console.log(err);\n            }\n        }\n\n\n    }\n\n\n    return (\n\n        <div className=\"VacationCard Box\">\n\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <CardActions className=\"test\">\n\n                        {globals.isUserLoggedIn() && globals.isAdmin() ? <ClearIcon onClick={deleteVacation} className=\"test\" /> : null}\n\n                        {globals.isUserLoggedIn() && globals.isAdmin() ? <span><NavLink to={\"/vacations/edit/\" + props.vacation.id} exact>\n                            <CreateIcon />\n                        </NavLink></span> : null}\n\n                        {globals.isUserLoggedIn() && !globals.isAdmin() ? <button id=\"follow-button\" onClick={handleclick} className={classTest} >{followVacation}</button> : null}\n                    </CardActions>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Contemplative Reptile\"\n                        height=\"240\"\n                        image={globals.vacationsUrl + \"images/\" + props.vacation.imageName}\n                    />\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h4\" component=\"h2\">\n                            <b>{props.vacation.destination}</b>\n                        </Typography>\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\" color=\"secondary\">\n                            Price: {props.vacation.price}$\n                            <hr />\n                            {props.vacation.arrival} - {props.vacation.departure}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {props.vacation.description}\n                            <hr />\n                            <b>Followers: {props.vacation.followers}</b>\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </div>\n    );\n}\n\n\nexport default VacationCardUsers;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\HomeArea\\AuthMenu\\AuthMenu.tsx",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\AdminArea\\AdminPage\\AdminPage.tsx",["153"],"import { Component } from \"react\";\nimport \"./AdminPage.css\";\nimport { Bar } from 'react-chartjs-2'\nimport VacationModel from \"../../Models/VacationModel\";\nimport store from \"../../Redux/Store\";\nimport jwtAxios from \"../../Services/JwtAxios\";\nimport globals from \"../../Services/Globals/Globals\";\nimport notify from \"../../Services/Notify\";\n\n\ninterface VacationListState {\n    vacations: VacationModel[];\n    labels: number[];\n    data: number[];\n}\n\ninterface VacationListProps {\n    history: History;\n}\n\nclass AdminPage extends Component<VacationListProps, VacationListState> {\n    public vacationsIdsOnly: number[] = [];\n    public vacationsFollowersOnly: number[] = [];\n\n    public constructor(props: VacationListProps) {\n        super(props);\n        this.state = {\n            vacations: store.getState().vacationsState.vacations,\n            labels: store.getState().vacationsState.vacations.map(v => { return v.id }),\n            data: store.getState().vacationsState.vacations.map(f => { return f.followers })\n        }\n\n    }\n\n\n\n\n\n    public async componentDidMount() {\n\n        try {\n\n            if (this.state.vacations.length === 0) {\n                const response = await jwtAxios.get<VacationModel[]>(globals.vacationsUrl); // response is a wrapper.\n                this.setState({ vacations: response.data });\n            }\n\n            let array = this.state.vacations\n\n            for (let oneVac of array) {\n                if (oneVac.followers > 0) {\n                    this.vacationsIdsOnly.push(oneVac.id);\n                    this.vacationsFollowersOnly.push(oneVac.followers);\n                    this.setState({ labels: this.vacationsIdsOnly, data: this.vacationsFollowersOnly })\n                }\n\n            };\n            console.log(this.vacationsIdsOnly);\n\n        } catch (err) {\n            console.log(err);\n        }\n\n    }\n\n\n    public render(): JSX.Element {\n\n\n        return (\n            <div className=\"AdminPage\">\n\n                <h2>Followers Per Vacation</h2>\n\n                <Bar\n                    data={{\n                        labels: this.state.labels,\n                        datasets: [\n                            {\n\n                                label: 'Followers Per Vacation',\n                                data: this.state.data,\n                                backgroundColor:\n                                    'rgba(255, 99, 132, 0.4)',\n\n                                borderColor: [\n                                    'rgba(255, 99, 132, 1)',\n                                    'rgba(54, 162, 235, 1)',\n                                    'rgba(255, 206, 86, 1)',\n                                    'rgba(75, 192, 192, 1)',\n                                    'rgba(153, 102, 255, 1)',\n                                    'rgba(255, 159, 64, 1)'\n                                ],\n                                borderWidth: 2\n                            }\n                        ]\n                    }}\n                    height={220}\n                    width={600}\n                    options={{\n                        scales: {\n\n                            yAxes: {\n                                ticks: {\n                                    beginAtZero: true,\n                                    precision: 0\n                                }\n                            }\n                        }\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default AdminPage;\n","C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\Notify.ts",[],"C:\\xampp\\htdocs\\apps\\React\\Project 3\\frontend\\src\\Components\\Services\\LiveService.ts",[],{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":3,"column":8,"nodeType":"160","messageId":"161","endLine":3,"endColumn":13},{"ruleId":"158","severity":1,"message":"163","line":4,"column":8,"nodeType":"160","messageId":"161","endLine":4,"endColumn":15},{"ruleId":"154","replacedBy":"164"},{"ruleId":"156","replacedBy":"165"},{"ruleId":"158","severity":1,"message":"166","line":1,"column":34,"nodeType":"160","messageId":"161","endLine":1,"endColumn":44},{"ruleId":"167","severity":1,"message":"168","line":20,"column":8,"nodeType":"169","endLine":20,"endColumn":10,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"171","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":17},{"ruleId":"158","severity":1,"message":"172","line":3,"column":19,"nodeType":"160","messageId":"161","endLine":3,"endColumn":23},{"ruleId":"158","severity":1,"message":"173","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":19},{"ruleId":"158","severity":1,"message":"174","line":1,"column":21,"nodeType":"160","messageId":"161","endLine":1,"endColumn":35},{"ruleId":"158","severity":1,"message":"171","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":17},{"ruleId":"158","severity":1,"message":"163","line":10,"column":8,"nodeType":"160","messageId":"161","endLine":10,"endColumn":15},{"ruleId":"158","severity":1,"message":"175","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":14},{"ruleId":"158","severity":1,"message":"176","line":12,"column":8,"nodeType":"160","messageId":"161","endLine":12,"endColumn":14},{"ruleId":"158","severity":1,"message":"177","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"178","line":16,"column":10,"nodeType":"160","messageId":"161","endLine":16,"endColumn":14},{"ruleId":"167","severity":1,"message":"179","line":84,"column":8,"nodeType":"169","endLine":84,"endColumn":10,"suggestions":"180"},{"ruleId":"158","severity":1,"message":"181","line":1,"column":10,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"177","line":2,"column":8,"nodeType":"160","messageId":"161","endLine":2,"endColumn":13},{"ruleId":"158","severity":1,"message":"171","line":6,"column":10,"nodeType":"160","messageId":"161","endLine":6,"endColumn":17},{"ruleId":"158","severity":1,"message":"182","line":8,"column":31,"nodeType":"160","messageId":"161","endLine":8,"endColumn":52},{"ruleId":"158","severity":1,"message":"183","line":8,"column":81,"nodeType":"160","messageId":"161","endLine":8,"endColumn":102},{"ruleId":"158","severity":1,"message":"184","line":11,"column":8,"nodeType":"160","messageId":"161","endLine":11,"endColumn":18},{"ruleId":"158","severity":1,"message":"177","line":1,"column":8,"nodeType":"160","messageId":"161","endLine":1,"endColumn":13},{"ruleId":"158","severity":1,"message":"185","line":10,"column":21,"nodeType":"160","messageId":"161","endLine":10,"endColumn":29},{"ruleId":"167","severity":1,"message":"168","line":41,"column":8,"nodeType":"169","endLine":41,"endColumn":10,"suggestions":"186"},{"ruleId":"154","replacedBy":"187"},{"ruleId":"156","replacedBy":"188"},{"ruleId":"167","severity":1,"message":"189","line":69,"column":8,"nodeType":"169","endLine":69,"endColumn":10,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":106,"column":23,"nodeType":"193","messageId":"194","endLine":106,"endColumn":25},{"ruleId":"158","severity":1,"message":"195","line":8,"column":8,"nodeType":"160","messageId":"161","endLine":8,"endColumn":14},"no-native-reassign",["196"],"no-negated-in-lhs",["197"],"@typescript-eslint/no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'store' is defined but never used.","'globals' is defined but never used.",["196"],["197"],"'useHistory' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'NavLink' is defined but never used.","'Link' is defined but never used.","'Component' is defined but never used.","'SyntheticEvent' is defined but never used.","'Logout' is defined but never used.","'Header' is defined but never used.","'axios' is defined but never used.","'send' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'props.match.params.id'. Either include them or remove the dependency array.",["199"],"'Add' is defined but never used.","'vacationDeletedAction' is defined but never used.","'vacationUpdatedAction' is defined but never used.","'PleaseWait' is defined but never used.","'useState' is defined but never used.",["200"],["196"],["197"],"React Hook useEffect has a missing dependency: 'props.vacation.id'. Either include it or remove the dependency array.",["201"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'notify' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"202","fix":"206"},{"desc":"207","fix":"208"},"Update the dependencies array to be: [history]",{"range":"209","text":"210"},"Update the dependencies array to be: [history, props.match.params.id]",{"range":"211","text":"212"},{"range":"213","text":"210"},"Update the dependencies array to be: [props.vacation.id]",{"range":"214","text":"215"},[464,466],"[history]",[2675,2677],"[history, props.match.params.id]",[1354,1356],[2272,2274],"[props.vacation.id]"]